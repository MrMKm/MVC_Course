@model RegisterRequest

<h1>Sign Up</h1>

<div class="card card-body">
    <form method="post" asp-action="Register">
        <div asp-validation-summary="ModelOnly"></div>

        <div class="mb-3">
            <label asp-for="Name">Name</label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Email">Email</label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Password">Password</label>
            <input asp-for="Password" class="form-control" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="ConfirmPassword">Confirm Password</label>
            <input asp-for="ConfirmPassword" class="form-control" />
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Role">Role</label>
            <select asp-for="Role" class="form-control">
                @foreach (var role in Enum.GetValues(typeof(Role)))
                {
                    <option>@role</option>
                }
            </select>
            <span asp-validation-for="Role" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>

        @if (ViewData["Error"] != null)
        {
            <div class="mb-3">
                <div class="alert alert-warning">
                    @ViewData["Error"]
                </div>
            </div>
        }
    </form>
</div>

@section Scripts
{
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
